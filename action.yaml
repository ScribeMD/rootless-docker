name: Rootless Docker
author: Kurt von Laven
description: Run Docker in Rootless Mode to Prevent Permission Errors
branding:
  icon: lock
  color: blue
runs:
  using: composite
  steps:
    - name: Check whether rootless Docker is already installed and/or in-use.
      id: rootless-docker
      run: |
        in_use="false"
        if docker context ls --format "{{ .Name }}" | grep --quiet "^rootless$"
        then
          installed="true"
          if [[ "$(docker info --format "{{ .ClientInfo.Context }}")" == "rootless" ]]
          then
            in_use="true"
          fi
        else
          installed="false"
        fi
        echo "::set-output name=installed::$installed"
        echo "::set-output name=in-use::$in_use"
      shell: bash
    - name: Stop Docker daemon.
      if: steps.rootless-docker.outputs.in-use != 'true'
      run: sudo systemctl stop docker.service docker.socket
      shell: bash
    - name: Set environment variables recommended by rootless Docker install script.
      if: steps.rootless-docker.outputs.installed != 'true'
      run: |
        if [[ -z $XDG_RUNTIME_DIR ]]; then
          echo XDG_RUNTIME_DIR=~/.docker/run >>"$GITHUB_ENV"
        fi
        echo ~/bin >>"$GITHUB_PATH"
      shell: bash
    - name: Install rootless Docker, start daemon, and wait until it's listening.
      if: steps.rootless-docker.outputs.installed != 'true'
      run: |
        success_sentinel="API listen on $XDG_RUNTIME_DIR/docker.sock"
        function awaitDockerd() {
          while IFS= read -r -t 60 line; do
            echo "$line"
            [[ "$line" = *"$success_sentinel"* ]] && return
          done
          echo "Timed out waiting for Docker daemon to listen." >&2
          return 1
        }

        install_script_output="$(curl \
          --fail \
          --silent \
          --show-error \
          --location https://get.docker.com/rootless |
          sh)"
        echo "$install_script_output"
        docker context use rootless
        if ! grep --quiet "$success_sentinel" <<<"$install_script_output"; then
          (PATH="/sbin:/usr/sbin:$PATH" dockerd-rootless.sh &) |&
          awaitDockerd
        fi
      env:
        FORCE_ROOTLESS_INSTALL: "1"
      shell: bash
